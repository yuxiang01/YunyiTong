<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yyt.reg.mapper.RegHospitalMapper">
    
    <resultMap type="RegHospital" id="RegHospitalResult">
        <result property="hospitalId"    column="hospital_id"    />
        <result property="addressId"    column="address_id"    />
        <result property="name"    column="name"    />
        <result property="tagId"    column="tag_id"    />
        <result property="position"    column="position"    />
        <result property="createBy"    column="create_by"    />
        <result property="telephone"    column="telephone"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectRegHospitalVo">
        select hospital_id, address_id, name, tag_id, position, create_by, telephone, remark from reg_hospital
    </sql>

    <select id="selectRegHospitalList" parameterType="RegHospital" resultMap="RegHospitalResult">
        <include refid="selectRegHospitalVo"/>
        <where>  
            <if test="addressId != null "> and address_id = #{addressId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="tagId != null  and tagId != ''"> and tag_id = #{tagId}</if>
            <if test="position != null  and position != ''"> and position = #{position}</if>
            <if test="telephone != null  and telephone != ''"> and telephone = #{telephone}</if>
        </where>
    </select>
    
    <select id="selectRegHospitalByHospitalId" parameterType="Long" resultMap="RegHospitalResult">
        <include refid="selectRegHospitalVo"/>
        where hospital_id = #{hospitalId}
    </select>
        
    <insert id="insertRegHospital" parameterType="RegHospital" useGeneratedKeys="true" keyProperty="hospitalId">
        insert into reg_hospital
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="addressId != null">address_id,</if>
            <if test="name != null">name,</if>
            <if test="tagId != null">tag_id,</if>
            <if test="position != null">position,</if>
            <if test="createBy != null">create_by,</if>
            <if test="telephone != null">telephone,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="addressId != null">#{addressId},</if>
            <if test="name != null">#{name},</if>
            <if test="tagId != null">#{tagId},</if>
            <if test="position != null">#{position},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="telephone != null">#{telephone},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateRegHospital" parameterType="RegHospital">
        update reg_hospital
        <trim prefix="SET" suffixOverrides=",">
            <if test="addressId != null">address_id = #{addressId},</if>
            <if test="name != null">name = #{name},</if>
            <if test="tagId != null">tag_id = #{tagId},</if>
            <if test="position != null">position = #{position},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="telephone != null">telephone = #{telephone},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where hospital_id = #{hospitalId}
    </update>

    <delete id="deleteRegHospitalByHospitalId" parameterType="Long">
        delete from reg_hospital where hospital_id = #{hospitalId}
    </delete>

    <delete id="deleteRegHospitalByHospitalIds" parameterType="String">
        delete from reg_hospital where hospital_id in 
        <foreach item="hospitalId" collection="array" open="(" separator="," close=")">
            #{hospitalId}
        </foreach>
    </delete>
</mapper>